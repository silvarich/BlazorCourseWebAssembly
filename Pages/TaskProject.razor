@page "/taskproject"
<h3>Tasks</h3>

@inject HttpClient http

@if(tasks == null)
{
    <p>Loading...</p>
}
else if(!tasks.Any())
{
    <p>Still waiting</p>
}
else
{
    <table class ="table">
        <thread>
            <tr>
                <th>Date</th>
                <th>Description</th>
                <th>Done</th>
            </tr>
        </thread>
        <tbody>
            @foreach (var item in tasks)
            {
            <tr>
                <td>@item.CreationDate</td>
                <td>@item.Description</td>
                <td><input type="checkbox"@bind="item.Done"/>@item.Done</td>
            </tr>
            }
        </tbody>
    </table>
}
<div class="form-group">
    <label>Task</label>
    <input type="Text" placeholder="What task?" @bind="newTask"/>
    <button class="btn btn-primary" @onclick="AddNewTask">Register Task</button>
</div>

@code {

    protected override async System.Threading.Tasks.Task OnInitializedAsync()
    {
        tasks = await http.GetFromJsonAsync<List<Task>>("data/json.json");
    }

    public class Task
    {
        public Guid ID { get; set; }
        public string Description { get; set; }
        public bool Done { get; set; }
        public DateTime CreationDate { get; set; }

    }
    private string newTask { get; set; }

    private List<Task> tasks = new List<Task>();

    void AddNewTask()
    {
        if (!string.IsNullOrWhiteSpace(newTask))
        {
            tasks.Add(new Task
                {
                    CreationDate = DateTime.Now,
                    Description = newTask,
                    ID = Guid.NewGuid()

                });
            newTask = "";
        }
    }
}
